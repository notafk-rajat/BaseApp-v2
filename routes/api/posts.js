const express=require("express"),router=express.Router(),Post=require("../../models/posts"),{isLoggedIn:isLoggedIn}=require("../../middleware"),User=require("../../models/user");router.get("/api/post",isLoggedIn,async(e,s)=>{const t=e.query,o=await Post.find(t).populate("postedBy").populate("replyTo");let r=await User.populate(o,{path:"replyTo.postedBy"});s.json(r)}),router.get("/api/posts/:id",async(e,s)=>{const t=await Post.findById(e.params.id).populate("postedBy");s.status(200).json(t)}),router.post("/api/post",isLoggedIn,async(e,s)=>{let t={postedBy:e.user,content:e.body.content};e.body.replyTo&&(t={...t,replyTo:e.body.replyTo});const o=await Post.create(t);s.json(o)}),router.patch("/api/posts/:id/like",isLoggedIn,async(e,s)=>{const t=e.params.id,o=e.user._id,r=e.user.likes&&e.user.likes.includes(t)?"$pull":"$addToSet";e.user=await User.findByIdAndUpdate(o,{[r]:{likes:t}},{new:!0});const p=await Post.findByIdAndUpdate(t,{[r]:{likes:o}},{new:!0});s.status(200).json(p)}),module.exports=router;
